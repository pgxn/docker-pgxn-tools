#!/usr/bin/env perl

use v5.30;
use strict;
use warnings;
use utf8;
use TOML::Parser;
use IPC::Run qw(run);

# Parse Cargo.toml.
my $file = 'Cargo.toml';
die "No $file file\n" unless -e $file;
my $cfg = TOML::Parser->new->parse_file($file);

# Look for package.
my $package = shift || $cfg->{package}{name};

# Look for pgrx version.
my $pgrxv = $cfg->{dependencies}{pgrx}
    || $cfg->{workspace}{dependencies}{pgrx}
    || die "pgrx not found in $file\n";
$pgrxv =~ s/^=//;

# Make sure we support this version of pgrx.
my @v = split /[.]/ => $pgrxv, 3;
die "Invalid pgrx version '$pgrxv'\n" unless @v == 3;
$v[2] =~ s/\D+//g;
die "$0 requires pgrx v0.11.4 or higher\n"
    unless $v[0] > 0 || $v[1] > 11 || ($v[1] == 11 && $v[2] > 3);

# Find pg_config.
my $pg_config = $ENV{PG_CONFIG} || do {
    run [qw(which pg_config)], \undef, \my $out
        or die "pg_config not found; did you forget to run pg-start?\n";
    chomp $out;
    $out;
};
say "### Using $pg_config";

# Determine the Postgres version.
my $pgv = $ENV{PGVERSION} || do {
    run [$pg_config, '--version'], \undef, \my $out or exit $? >> 8;
    $out =~ /(\d+)/ or die "No version found in $pg_config --version output:\n$out";
    $1;
};
say "### Using PostgreSQL $pgv";

# Install pgrx.
say "### Installing pgrx $pgrxv";
run [qw(cargo install --locked cargo-pgrx --version), $pgrxv] or exit $? >> 8;

# Initialize pgrx for the Postgres version.
say "### Initializing pgrx $pgrxv for Postgres $pgv";
run [qw(cargo pgrx init), "--pg$pgv=$pg_config"] or exit $? >> 8;

# Build the package.
say "### Building $package";
my @common_args = ('--package', $package, '--pg-config', $pg_config);
run [qw(cargo pgrx package --test), @common_args] or exit $? >> 8;

# Install the extension.
# (Must come before test: https://github.com/pgcentralfoundation/pgrx/issues/1670)
say "### Installing $package";
run [qw(sudo cargo pgrx install --test), @common_args] or exit $? >> 8;

# Run the tests as the postgres user.
say "### Testing $package";
my $res = run [
    qw(cargo pgrx test --runas postgres --pgdata /var/lib/postgresql/pgrx --package),
    $package,
    "pg$pgv",
]; #  or exit $? >> 8;

# https://github.com/pgcentralfoundation/pgrx/issues/1671
run [qw(rm -rf /var/lib/postgresql/pgrx)];
exit $? >> 8 unless $res;

# Exit unless there's a Makefile.
$file = 'Makefile';
exit unless -e $file;

# Look for signs of installcheck in the Makefile.
open my $fh, '<:raw', $file or die "Cannot open $file: $!\n";
my $regress;
while (<$fh>) {
    next unless /^REGRESS\s*=/ || /^installcheck:/;
    $regress = 1;
    last;
}
close $fh;
exit unless $regress;

# Run installcheck.
say "### Running installcheck for $package";
run [qw(make installcheck PGUSER=postgres)] or do {
    my $exit_code = $? >> 8;
    # Try to find regression.diffs.
    run[qw(find . -name regression.diffs -exec cat {} +)];
    exit $exit_code;
};
